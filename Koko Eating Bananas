class Solution {

    public int findMax(int[] piles) {
        int max = Integer.MIN_VALUE;
        for (int pile : piles) {
            max = Math.max(max, pile);
        }
        return max;
    }

    public long totalHour(int[] piles, int speed) {
        long totalHours = 0;  
        for (int pile : piles) {
            totalHours += (pile + (long)speed - 1) / speed;
        }
        return totalHours;
    }

    public int minEatingSpeed(int[] piles, int h) {
        int low = 1, high = findMax(piles);

        while (low <= high) {
            int mid = low + (high - low) / 2;
            long totalHours = totalHour(piles, mid);

            if (totalHours <= h) {
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }

        return low;
    }
}
